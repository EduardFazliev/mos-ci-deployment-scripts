- job:
    parameters:
      - string:
          name: ISO_DIR
          default: "/var/www/fuelweb-iso"
      - string:
          name: DVR_ENABLE
          default: "FALSE"
      - string:
          name: L3_HA_ENABLE
          default: "FALSE"
      - string:
          name: L2_POP_ENABLE
          default: "FALSE"
      - string:
          name: DISABLE_SSL
          default: "TRUE"
      - string:
          name: FUEL_DEV_VER
          default: "2.9.19"
      - string:
          name: FUEL_QA_VER
          default: "master"
      - string:
          name: NOVA_QUOTAS_ENABLED
          default: "FALSE"
      - string:
          name: DEPLOYMENT_TIMEOUT
          default: "10000"
      - string:
          name: INTERFACE_MODEL
          default: "virtio"
      - string:
          name: KVM_USE
          default: "TRUE"
      - string:
          name: SEPARATE_SERVICES_COUNT
          default: "0"
      - string:
          name: SEPARATE_SERVICE_RABBIT_ENABLE
          default: "FALSE"
      - string:
          name: SEPARATE_SERVICE_DB_ENABLE
          default: "FALSE"
      - string:
          name: SEPARATE_SERVICE_KEYSTONE_ENABLE
          default: "FALSE"
      - string:
          name: SEPARATE_SERVICE_RABBIT_PLUGIN_PATH
          default: "/var/www/detach-plugins"
      - string:
          name: SEPARATE_SERVICE_DB_PLUGIN_PATH
          default: "/var/www/detach-plugins"
      - string:
          name: SEPARATE_SERVICE_KEYSTONE_PLUGIN_PATH
          default: "/var/www/detach-plugins"

    name: (9.0)create_param_environment_from_template
    wrappers:
      - build-name:
          name: ${BUILD_NUMBER}.${FILE,path="build-name-setter.info"}
      - ansicolor
    builders:
        - shell: |
            echo `hostname`
            ISO_NAME=`ls "$ISO_DIR"`
            ENV_NAME=MOS_CI_"$ISO_NAME"

            if [ "$MOS_VERSION" == 'mitaka' ] || [ "$MOS_VERSION" == 'kilo' ] ;
            then
            ISO_ID=`echo "$ISO_NAME" | cut -f4 -d-`
            else
            ISO_ID=`echo "$ISO_NAME" | cut -f3 -d-`
            fi

            ########################################
            ##### Applying patches for fuel-qa #####
            ########################################

            if [ ${IRONIC_ENABLE} == 'true' ]; then
                patch_fuel_qa ironic.patch
            fi

            if [ ${SNAPSHOT_NAME} == *"DVR"*' ] || [ ${SNAPSHOT_NAME} == *"L2_POP"*' ] \
            || [ ${SNAPSHOT_NAME} == *"L3_HA"*' ];
            then
                patch_fuel_qa DVR_L2_pop_HA.patch
            fi

            if [[ ${INTERFACE_MODEL} == 'virtio' ]]; then
                # Virtio network interfaces have names eth0..eth5
                # (rather than default names - enp0s3..enp0s8)
                patch_fuel_qa virtio.patch
                for i in {0..5}; do
                    export IFACE_$i=eth$i
                done
            fi

            if [[ ${NOVA_QUOTAS_ENABLED} == 'TRUE' ]]; then
                patch_fuel_qa nova_quotas.patch
            fi

    project-type: freestyle
    defaults: global
    scm:
       - mos-ci-deployment-scripts
    description: 'Create environment with parameters, specified by PARAM string.'
    disabled: false
    display-name: 'Create Parameterized Environment'
    concurrent: true
    browser: githubweb
    retry-count: 3
    logrotate:
      daysToKeep: 20
      numToKeep: 200
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
    publishers:
      - workspace-cleanup:
          fail-build: false
      - email:
          recipients: efazliev@mirantis.com
