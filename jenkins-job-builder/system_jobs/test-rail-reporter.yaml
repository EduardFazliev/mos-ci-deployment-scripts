- job:
    name: test_rail_reporter
    wrappers:
      - build-name:
          name: ${BUILD_NUMBER}.${FILE,path="build-name-setter.info"}
      - ansicolor
    parameters:
      - string:
          name: ISO_DIR
          default: /var/www/fuelweb-iso
      - string:
          name: SNAPSHOT_NAME
      - string:
          name: TEST_GROUP
      - string:
          name: TESTRAIL_FILE
          default: /var/www/test_rail/user.sh
      - string:
          name: REPORT_PREFIX
          default: /srv/jenkins/neutron
      - string:
          name: ENV_CHANGER
      - string:
          name: REPORT_FILE
          default: report.xml
      - string:
          name: HORIZON
          default: "FALSE"
      - string:
          name: SUITE
      - string:
          name: MILESTONE
      - string:
          name: MOS_VERSION

    builders:
        - shell: |
            ISO_NAME=`ls "$ISO_DIR"`

            if [ "$MOS_VERSION" == 'mitaka' ] || [ "$MOS_VERSION" == 'kilo' ] ;
            then
            ISO_ID=`echo "$ISO_NAME" | cut -f4 -d-`
            else
            ISO_ID=`echo "$ISO_NAME" | cut -f3 -d-`
            fi

            ENV_NAME=${ENV_NAME:-MOS_CI_"$ISO_NAME"}

            SNAPSHOT=`echo $SNAPSHOT_NAME | sed 's/ha_deploy_//'`
            echo "$ISO_ID"_"$SNAPSHOT" > build-name-setter.info

            if [ -n "$ENV_CHANGER" ];
            then
            export ENV_NAME="$ENV_NAME""$ENV_CHANGER"
            fi

            REPORT_XML="$REPORT_PREFIX"/"$ENV_NAME"_"$SNAPSHOT_NAME"/"$REPORT_FILE"

            virtualenv venv
            . venv/bin/activate

            # standard credentials for testrail is in this file, that
            # is copied to host by ansible playbook
            . "$TESTRAIL_FILE"

            # if we need to change SUITE
            if [ -n "$SUITE" ];
            then
            TESTRAIL_SUITE="$SUITE"
            export TESTRAIL_SUITE="$SUITE"
            fi

            # if we need to change MILESTONE
            if [ -n "$MILESTONE" ];
            then
            TESTRAIL_MILESTONE="$MILESTONE"
            export TESTRAIL_MILESTONE="$MILESTONE"
            fi

            python setup.py install

            set +e
            BUILD=`cat "$REPORT_PREFIX"/"$ENV_NAME"_"$SNAPSHOT_NAME"/build_url`
            set -e

            if [[ "$HORIZON" == 'TRUE' ]]; then
            report -v --iso-id "$ISO_ID" --env-description "$SNAPSHOT-$TEST_GROUP" --testrail-url  "${TESTRAIL_URL}" --testrail-user  "${TESTRAIL_USER}" --testrail-password "${TESTRAIL_PASSWORD}" --testrail-project "${TESTRAIL_PROJECT}" --testrail-milestone "${TESTRAIL_MILESTONE}" --testrail-suite "${TESTRAIL_SUITE}" --test-results-link "$BUILD" "$REPORT_XML" --testrail-name-template '{custom_test_group}.{title}' --xunit-name-template '{classname}.{methodname}'
            else
            report -v --iso-id "$ISO_ID" --env-description "$SNAPSHOT-$TEST_GROUP" --testrail-url  "${TESTRAIL_URL}" --testrail-user  "${TESTRAIL_USER}" --testrail-password "${TESTRAIL_PASSWORD}" --testrail-project "${TESTRAIL_PROJECT}" --testrail-milestone "${TESTRAIL_MILESTONE}" --testrail-suite "${TESTRAIL_SUITE}" --test-results-link "$BUILD" "$REPORT_XML"
            fi

    scm:
      - test-rail-reporter-master
    project-type: freestyle
    defaults: global
    description: 'Send XUnit reports to TestRail'
    disabled: false
    display-name: 'Report To TestRail'
    concurrent: true
    browser: githubweb
    retry-count: 3
    logrotate:
      daysToKeep: 30
      artifactDaysToKeep: -1
      artifactNumToKeep: -1

    publishers:
      - email:
          recipients: efazliev@mirantis.com, sturivnyi@mirantis.com, obutenko@mirantis.com
      - workspace-cleanup:
          fail-build: false
      - description-setter:
          regexp: ^.*\[TestRun URL\]\s*(.*)
          regexp-for-failed: ^.*\[TestRun URL\]\s*(.*)
          description: <a href="\1">TestRail Report URL</a>
          description-for-failed: <a href="\1">TestRail Report URL</a>
